name: ci
on:
  workflow_call:
    inputs:
      dockerfilepath:
        description: "Path to Dockerfile (relative to repo root)"
        required: true
        type: string
      context:
        description: "Build context (relative to repo root)"
        required: false
        type: string
        default: "."
      image_name:
        description: "Repository name for image (eg: OWNER/imagename)"
        required: true
        type: string
      platforms:
        description: "Platforms to build for"
        required: false
        type: string
        default: "linux/amd64,linux/arm64"

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image.outputs.image }}     # job output exported to workflow outputs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push (multi-arch)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfilepath }}
          platforms: ${{ inputs.platforms }}
          push: true
          tags: |
            ghcr.io/${{ inputs.image_name }}:latest
            ghcr.io/${{ inputs.image_name }}:${{ github.sha }}

      - name: Set image output (tag)
        id: set-image
        run: |
          # Compose a canonical image ref the caller can use
          IMAGE_REF="ghcr.io/${{ inputs.image_name }}:${{ github.sha }}"
          echo "image=${IMAGE_REF}" >> $GITHUB_OUTPUT
