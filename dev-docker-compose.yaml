services:
  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"     # HTTP (ACME http-01)
      - "443:443"   # HTTPS
    volumes:
      - ./conf:/etc/caddy    # your Caddy config
      - ./site:/srv          # serve static files from here
      - caddy_data:/data     # certs, logs, etc (persisted)
      - caddy_config:/config # caddy internal config
    environment:
      - UPSTREAM_API_GATEWAY=api-gateway-blue
      - UPSTREAM_WORKER=worker-blue
    depends_on:
      - api-gateway-blue
      - api-gateway-green
      - worker-blue
      - worker-green
    networks:
      - web
  api-gateway-blue:
    build: 
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: builder
    container_name: api-gateway-blue
    depends_on:
      - worker-blue
      - worker-green
    command: pnpm run start:dev api-gateway
    env_file:
      - ./.env
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app
    networks:
      - web
  api-gateway-green:
    build: 
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: builder
    container_name: api-gateway-green
    depends_on:
      - worker-blue
      - worker-green
    command: pnpm run start:dev api-gateway
    env_file:
      - ./.env
    ports:
      - '3001:3000'
    volumes:
      - .:/usr/src/app
    networks:
      - web
  worker-blue:
    build: 
      context: .
      dockerfile: ./apps/worker/Dockerfile
      target: builder
    container_name: worker-blue
    command: pnpm run start:dev worker
    env_file:
      - ./.env
    ports:
      - '3002:3001'
    volumes:
      - .:/usr/src/app
    networks:
      - web
  worker-green:
    build: 
      context: .
      dockerfile: ./apps/worker/Dockerfile
      target: builder
    container_name: worker-green
    command: pnpm run start:dev worker
    env_file:
      - ./.env
    ports:
      - '3003:3001'
    volumes:
      - .:/usr/src/app
    networks:
      - web

volumes:
  caddy_data:
  caddy_config:

networks:
  web:
    driver: bridge
